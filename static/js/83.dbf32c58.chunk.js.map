{"version":3,"file":"static/js/83.dbf32c58.chunk.js","mappings":"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","sources":["components/redux/contacts/items/items-selectors.js","components/Phonebook/ContactForm/useForm.js","components/Phonebook/ContactForm/initialState.js","webpack://react-homework-template/./src/components/Phonebook/ContactForm/contactForm.module.css?62c5","components/Phonebook/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Phonebook/ContactList/contactList.module.css?239b","components/Phonebook/ContactList/ContactListItem.jsx","components/Phonebook/ContactList/ContactList.jsx","components/redux/contacts/filter/filter-selectors.js","components/Phonebook/Phonebook.jsx","pages/Home/Home.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["\nexport const getContacts = ({contacts}) => contacts.items;\n\nexport const getFamilyContacts = ({contacts}) => contacts.items.filter(({family}) => family)\n\nexport const getFilteredContacts = ({contacts}) => {\n    const {items, filter} = contacts;\n    if(!filter) {\n        return items;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    const result = items.filter(({name, number}) => {\n        const normalizedName = name.toLowerCase();\n        const normalizedNumber = number.toLowerCase();\n        return (normalizedName.includes(normalizedFilter) || normalizedNumber.includes(normalizedFilter));\n    });\n\n    return result;\n}\n","import {useState} from \"react\";\nimport PropTypes from 'prop-types';\n\nconst useForm = ({initialState, onSubmit}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const {value, name, type, checked} = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue,\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;\n\nuseForm.defaultProps = {\n    onSubmit: () => {},\n}\n\nuseForm.propTypes = {\n    onSubmit: PropTypes.func,\n    target: PropTypes.object,\n}","const initialState = {\n    nameId: '',\n    numberId: '',\n    familyId: '',\n    name: '',\n    number: '',\n    family: false,\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"phoneForm\":\"contactForm_phoneForm__fecZ5\",\"phoneInputName\":\"contactForm_phoneInputName__hiaPc\",\"phoneInputNumber\":\"contactForm_phoneInputNumber__4PF5a\",\"phoneInputLicence\":\"contactForm_phoneInputLicence__62fyl\",\"licenceText\":\"contactForm_licenceText__u6xqY\",\"phoneFormButton\":\"contactForm_phoneFormButton__FRxt2\"};","import { useMemo } from \"react\";\nimport useForm from './useForm';\nimport shortid from \"shortid\";\nimport PropTypes from 'prop-types';\nimport initialState from \"./initialState\";\n\nimport s from \"./contactForm.module.css\";\n\nconst ContactForm = ({onSubmit}) => {\n\n    const {state, handleChange, handleSubmit} = useForm({initialState, onSubmit});\n\n    const nameId = useMemo(()=> shortid(), []);\n    const numberId = useMemo(()=> shortid(), []);\n    const familyId = useMemo(()=> shortid(), []);\n    \n    const {name, number, family} = state;\n\n    \n    return (\n        <form onSubmit={handleSubmit} className={s.phoneForm}>\n            <label htmlFor={nameId}>\n                Name\n                <input\n                    className={s.phoneInputName}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    value={name}\n                    onChange={handleChange}\n                    id={nameId}\n                    required\n                />\n            </label>\n\n            <label htmlFor={numberId}>\n                Number\n                <input\n                    className={s.phoneInputNumber}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    value={number}\n                    onChange={handleChange}\n                    id={numberId}\n                    required\n                />\n                </label>\n                <label html={familyId}>\n                    <input\n                    className={s.phoneInputLicence}\n                    value={family}\n                    type=\"checkbox\"\n                    name=\"family\"\n                    checked={family}\n                    onChange={handleChange}\n                    id={familyId}\n                    />\n                    <span className={s.licenceText}>If family contact</span>\n                </label>\n\n                <button type='submit' className={s.phoneFormButton}>Add contact</button>\n            </form>\n    )\n}\n\nexport default ContactForm;\n\nContactForm.defaultProps = {\n    onSubmit: () => {}\n}\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func,\n}","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"contactList_phonebook__Ekg2i\",\"phonebookTitle\":\"contactList_phonebookTitle__fYbgA\",\"phonebookList\":\"contactList_phonebookList__NBcO4\",\"phonebookListItem\":\"contactList_phonebookListItem__zsiCr\",\"phonebookListButton\":\"contactList_phonebookListButton__gBbI+\",\"contact\":\"contactList_contact__YILiK\",\"contactInput\":\"contactList_contactInput__VdnXO\",\"title\":\"contactList_title__LOOxb\"};","import {memo} from \"react\";\nimport PropTypes from 'prop-types';\n\nimport s from \"./contactList.module.css\"\n\nconst ContactListItem = ({id, name, number, removeContact}) => {\n    return (\n        <li className={s.phonebookListItem}>\n            {name}: {number}\n            <button className={s.phonebookListButton} type='button' onClick={() => removeContact(id)}>Delete</button>\n        </li>\n    )\n}\n\nexport default memo(ContactListItem);\n\nContactListItem.defaultProps = {\n    id: \"\",\n    name: \"\",\n    number: \"\",\n    removeContact: () => {},\n}\n\nContactListItem.propTypes = {\n    removeContact: PropTypes.func,\n    name: PropTypes.string,\n    number: PropTypes.string,\n    id: PropTypes.string,\n}","import PropTypes from 'prop-types';\nimport ContactListItem from \"./ContactListItem\"\nimport s from \"./contactList.module.css\"\n\nconst ContactList = ({items, removeContact}) => {\n    const elements = items.map(item => <ContactListItem key={item.id} {...item} removeContact={removeContact} />);\n\n    return (<>\n        <h4 className={s.title}>Contacts list:</h4>\n        <ol>\n            {elements}\n        </ol>\n    </>\n    )\n}\nexport default ContactList;\n\nContactList.defaultProps = {\n    items: [],\n    removeContact: () => {},\n}\n\nContactList.propTypes = {\n    removeContact: PropTypes.func,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        nameId: PropTypes.string,\n        numberId: PropTypes.string,\n        familyId: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n        family: PropTypes.bool,\n        id: PropTypes.string,\n        })\n    ),\n}","export const getFilter = ({contacts}) => contacts.filter;","import { useSelector, useDispatch } from \"react-redux\";\n\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\n\nimport { addContact, removeContact } from \"../redux/contacts/items/items-slice\";\nimport {setFilter} from \"../redux/contacts/filter/filter-slice\";\n\nimport { getFilteredContacts } from \"../redux/contacts/items/items-selectors\";\nimport {getFilter} from \"../redux/contacts/filter/filter-selectors\";\n\nimport PropTypes from 'prop-types';\nimport s from \"./ContactList/contactList.module.css\"\n\nexport const Phonebook = () => {\n\n    const contacts = useSelector(getFilteredContacts);\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n\n    const onAddContact = data => {\n        const action = addContact(data);\n        dispatch(action)\n    };\n\n    const onRemoveContact = id => {\n        dispatch(removeContact(id));\n    };\n\n    const handleFilter = ({target}) => {\n        dispatch(setFilter(target.value));\n    }\n\n    return (\n        <div className={s.phonebook}>\n            <h2 className={s.phonebookTitle}>Add contact</h2>\n            <ContactForm onSubmit={onAddContact} />\n            <h2 className={s.phonebookTitle}>Contacts</h2>\n                <div className={s.contact}>\n                <input value={filter} name=\"filter\" onChange={handleFilter} className={s.contactInput} placeholder=\"Filter contacts\" />\n                    <ContactList items={contacts} removeContact={onRemoveContact}/>\n                </div>\n        </div>\n    )\n}\n\nexport default Phonebook;\n\nPhonebook.defaultProps = {\n    getFilteredContacts: () => {},\n    getFilter: () => {},\n    data: {},\n    id: \"\",\n}\n\nPhonebook.propTypes = {\n    getFilteredContacts: PropTypes.func,\n    getFilter: PropTypes.func,\n    target: PropTypes.object,\n    id: PropTypes.string,\n    data: PropTypes.shape({\n        nameId: PropTypes.string,\n        numberId: PropTypes.string,\n        familyId: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n        family: PropTypes.bool,\n        }),\n}","import Phonebook from \"../../components/Phonebook/Phonebook\"\n\n\nconst Home = () => {\n    return (\n        <div>\n            <Phonebook />\n        </div>\n    )\n}\n\nexport default Home;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["getFamilyContacts","contacts","items","filter","family","getFilteredContacts","normalizedFilter","toLowerCase","name","number","normalizedName","normalizedNumber","includes","useForm","initialState","onSubmit","useState","state","setState","handleChange","target","value","type","checked","newValue","prevState","handleSubmit","e","preventDefault","defaultProps","propTypes","PropTypes","nameId","numberId","familyId","ContactForm","useMemo","shortid","className","s","htmlFor","pattern","title","onChange","id","required","html","ContactListItem","removeContact","onClick","memo","ContactList","elements","map","item","getFilter","Phonebook","useSelector","dispatch","useDispatch","data","action","addContact","setFilter","placeholder","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","length","unique","split","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}